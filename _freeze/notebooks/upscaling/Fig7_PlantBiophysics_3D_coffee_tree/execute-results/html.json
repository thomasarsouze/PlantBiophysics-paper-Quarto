{
  "hash": "c7dca926fc53f93ab55fae869b46db83",
  "result": {
    "markdown": "---\ntitle: PlantBiophysics.jl 3D global tree simulation\n---\n\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\n### A Pluto.jl notebook ###\n# v0.19.23\n\nusing Markdown\nusing InteractiveUtils\n```\n:::\n\n\n\n\nThis Pluto notebook presents the computation of Fig. 7 from the scientific article. It displays leaf temperature on a 3D coffee tree simulated by PlantBiophysics.jl. Non-Pluto Julia script is also available (see [here](https://github.com/VEZY/PlantBiophysics-paper/blob/main/tutorials/Fig7_PlantBiophysics_3D_coffee_tree_noPluto.jl)).\n\n## Importing the dependencies:\n\nLoading the Julia packages:\n\n\n\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nbegin\n    using PlantBiophysics, PlantGeom, PlantMeteo, PlantSimEngine\n    using CairoMakie\n    using BenchmarkTools\n    using FLoops\n\tusing Downloads\n    using Dates, DataFrames, CSV, Statistics\n    using MultiScaleTreeGraph\n    using PlutoUI\n    nothing\nend\n```\n:::\n\n\n\n## Reading data \n#### MTG file\n\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nmtg = read_opf(Downloads.download(\"https://raw.githubusercontent.com/VEZY/PlantBiophysics-paper/main/notebooks/upscaling/coffee.opf\"))\n\n\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n/ 1: Individual\n└─ / 2: Axis\n   ├─ < 5: Metamer\n   ├─ < 799: Metamer\n   │  ├─ + 800: Axis\n   │  │  ├─ < 806: Metamer\n   │  │  │  └─ + 807: Axis\n   │  │  │     ├─ / 808: Metamer\n   │  │  │     ├─ < 810: Metamer\n   │  │  │     ├─ < 814: Metamer\n   │  │  │     │  ├─ + 816: Leaf\n   │  │  │     │  └─ + 815: Leaf\n   │  │  │     ├─ < 811: Metamer\n   │  │  │     │  ├─ + 813: Leaf\n   │  │  │     │  └─ + 812: Leaf\n   │  │  │     ├─ < 809: Metamer\n   │  │  │     └─ < 817: Metamer\n   │  │  │        └─ + 818: Leaf\n   │  │  ├─ < 939: Metamer\n   │  │  │  ├─ + 940: Leaf\n   │  │  │  └─ + 941: Leaf\n   │  │  ├─ < 803: Metamer\n   │  │  ├─ < 926: Metamer\n   │  │  ├─ < 936: Metamer\n   │  │  │  ├─ + 938: Leaf\n   │  │  │  └─ + 937: Leaf\n   │  │  ├─ < 899: Metamer\n   │  │  ├─ < 842: Metamer\n   │  │  │  ├─ + 869: Axis\n   │  │  │  │  ├─ < 875: Metamer\n…\n```\n:::\n:::\n\n\n\n#### Meteorological data\n\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nweather = PlantMeteo.read_weather(Downloads.download(\"https://raw.githubusercontent.com/VEZY/PlantBiophysics-paper/main/notebooks/upscaling/meteo.csv\"),\n    :temperature => :T,\n    :relativeHumidity => (x -> x ./ 100) => :Rh,\n    :wind => :Wind,\n    :VPD => (x -> x ./ 100.0) => :VPD,\n    :atmosphereCO2_ppm => :Cₐ,\n    date_format=DateFormat(\"yyyy/mm/dd\")\n);\n\n\n```\n:::\n\n\n\n#### Models list\n\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\nmodels = read_model(Downloads.download(\"https://raw.githubusercontent.com/VEZY/PlantBiophysics-paper/main/notebooks/upscaling/plant_coffee.yml\"));\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n[ Info: Some variables must be initialized before simulation: (interception = (:Rᵢ,),) (see `to_initialize()`)\n[ Info: Using default values for parameters [:aₛₕ, :aₛᵥ, :ε, :ΔT] in model Monteith\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.julia .cell-code}\nmodels[\"Leaf\"]\n```\n\n::: {.cell-output .cell-output-display execution_count=7}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span style=\"font-style:italic;color:rgb(255,167,38)\">╭──── </span><span style=\"font-style:italic;color:rgb(255,167,38)\">Dependency graph</span><span style=\"font-style:italic;color:rgb(255,167,38)\"> ──────────────────────────────────────────────────╮</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">╭──── </span>interception<span class=\"ansi-green-fg\"> ─────────────╮</span>                                     <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span class=\"ansi-blue-fg\">╭──── </span>Main model<span class=\"ansi-blue-fg\"> ─────────╮</span>  <span class=\"ansi-green-fg\">│</span>                                     <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span class=\"ansi-blue-fg\">│</span>  Process: interception  <span class=\"ansi-blue-fg\">│</span>  <span class=\"ansi-green-fg\">│</span>                                     <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span class=\"ansi-blue-fg\">│</span>  Model: Translucent     <span class=\"ansi-blue-fg\">│</span>  <span class=\"ansi-green-fg\">│</span>                                     <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span class=\"ansi-blue-fg\">│</span>  Dep: nothing           <span class=\"ansi-blue-fg\">│</span>  <span class=\"ansi-green-fg\">│</span>                                     <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span class=\"ansi-blue-fg\">╰─────────────────────────╯</span>  <span class=\"ansi-green-fg\">│</span>                                     <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">╰───────────────────────────────╯</span>                                     <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">╭──── </span>energy_balance<span class=\"ansi-green-fg\"> ──────────────────────────────────────────────╮</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span class=\"ansi-blue-fg\">╭──── </span>Main model<span class=\"ansi-blue-fg\"> ───────────╮</span>                                   <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span class=\"ansi-blue-fg\">│</span>  Process: energy_balance  <span class=\"ansi-blue-fg\">│</span>                                   <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span class=\"ansi-blue-fg\">│</span>  Model: Monteith          <span class=\"ansi-blue-fg\">│</span>                                   <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span class=\"ansi-blue-fg\">│</span>  Dep: nothing             <span class=\"ansi-blue-fg\">│</span>                                   <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span class=\"ansi-blue-fg\">╰───────────────────────────╯</span>                                   <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>                  <span style=\"color:rgb(66,165,245)\">│</span><span style=\"color:rgb(66,165,245)\"> </span><span style=\"color:rgb(66,165,245)\"> </span><span class=\"ansi-red-fg\">╭──── </span>Hard-couple...<span class=\"ansi-red-fg\"> ───────╮</span>                <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>                  <span style=\"color:rgb(66,165,245)\">│</span><span style=\"color:rgb(66,165,245)\"> </span><span style=\"color:rgb(66,165,245)\"> </span><span class=\"ansi-red-fg\">│</span>  Process: photosynthesis  <span class=\"ansi-red-fg\">│</span>                <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>                  <span style=\"color:rgb(66,165,245)\">└</span><span style=\"color:rgb(66,165,245)\">─</span><span style=\"color:rgb(66,165,245)\">─</span><span class=\"ansi-red-fg\">│</span>  Model: Fvcb              <span class=\"ansi-red-fg\">│</span>                <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>                     <span class=\"ansi-red-fg\">╰───────────────────────────╯</span>                <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>                          <span style=\"color:rgb(66,165,245)\">│</span><span style=\"color:rgb(66,165,245)\"> </span><span style=\"color:rgb(66,165,245)\"> </span><span class=\"ansi-red-fg\">╭──── </span>Hard-coupled model<span class=\"ansi-red-fg\"> ─────────╮</span>  <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>                          <span style=\"color:rgb(66,165,245)\">│</span><span style=\"color:rgb(66,165,245)\"> </span><span style=\"color:rgb(66,165,245)\"> </span><span class=\"ansi-red-fg\">│</span>  Process: stomatal_conductance  <span class=\"ansi-red-fg\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>                          <span style=\"color:rgb(66,165,245)\">└</span><span style=\"color:rgb(66,165,245)\">─</span><span style=\"color:rgb(66,165,245)\">─</span><span class=\"ansi-red-fg\">│</span>  Model: Medlyn                  <span class=\"ansi-red-fg\">│</span>  <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">│</span>                             <span class=\"ansi-red-fg\">╰─────────────────────────────────╯</span>  <span class=\"ansi-green-fg\">│</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>  <span class=\"ansi-green-fg\">╰──────────────────────────────────────────────────────────────────╯</span>  <span style=\"font-style:italic;color:rgb(255,167,38)\">│</span>\n<span style=\"font-style:italic;color:rgb(255,167,38)\">╰────────────────────────────────────────────────────────────────────────╯</span>\nTimeStepTable{Status{(:Rᵢ, :Ra_SW_f, :sky...}(1 x 18):\n<span class=\"ansi-red-fg\">╭</span><span class=\"ansi-red-fg\">─────</span><span class=\"ansi-red-fg\">┬</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┬</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┬</span><span class=\"ansi-red-fg\">──────────────</span><span class=\"ansi-red-fg\">┬</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┬</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┬</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┬</span><span class=\"ansi-red-fg\">──────</span>──\n<span class=\"ansi-red-fg\">│</span><span class=\"ansi-bold\"> Row </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bold\">      Rᵢ </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bold\"> Ra_SW_f </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bold\"> sky_fraction </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bold\">       d </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bold\">      Tₗ </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bold\">      Rn </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bold\"> Ra_LW</span> ⋯\n<span class=\"ansi-red-fg\">│</span>     <span class=\"ansi-red-fg\">│</span><span class=\"ansi-bright-black-fg\"> Float64 </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bright-black-fg\"> Float64 </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bright-black-fg\">      Float64 </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bright-black-fg\"> Float64 </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bright-black-fg\"> Float64 </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bright-black-fg\"> Float64 </span><span class=\"ansi-red-fg\">│</span><span class=\"ansi-bright-black-fg\"> Float</span> ⋯\n<span class=\"ansi-red-fg\">├</span><span class=\"ansi-red-fg\">─────</span><span class=\"ansi-red-fg\">┼</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┼</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┼</span><span class=\"ansi-red-fg\">──────────────</span><span class=\"ansi-red-fg\">┼</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┼</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┼</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┼</span><span class=\"ansi-red-fg\">──────</span>──\n<span class=\"ansi-red-fg\">│</span>   1 <span class=\"ansi-red-fg\">│</span>    -Inf <span class=\"ansi-red-fg\">│</span>    -Inf <span class=\"ansi-red-fg\">│</span>         -Inf <span class=\"ansi-red-fg\">│</span>    -Inf <span class=\"ansi-red-fg\">│</span>    -Inf <span class=\"ansi-red-fg\">│</span>    -Inf <span class=\"ansi-red-fg\">│</span>    -I ⋯\n<span class=\"ansi-red-fg\">╰</span><span class=\"ansi-red-fg\">─────</span><span class=\"ansi-red-fg\">┴</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┴</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┴</span><span class=\"ansi-red-fg\">──────────────</span><span class=\"ansi-red-fg\">┴</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┴</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┴</span><span class=\"ansi-red-fg\">─────────</span><span class=\"ansi-red-fg\">┴</span><span class=\"ansi-red-fg\">──────</span>──\n<span class=\"ansi-cyan-fg\">                                                              12 columns omitted</span>\n</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.julia .cell-code}\nto_initialize(models[\"Leaf\"])\n```\n\n::: {.cell-output .cell-output-display execution_count=8}\n```\n(interception = (:Rᵢ,), photosynthesis = (:aPPFD,), energy_balance = (:Ra_SW_f, :d, :sky_fraction))\n```\n:::\n:::\n\n\n::: {.cell execution_count=8}\n``` {.julia .cell-code}\ninit_status!(models[\"Leaf\"], Ra_SW_f = 300.0)\n```\n:::\n\n\n\n## Adding light interception data: incident radiation\n\n\n::: {.cell execution_count=9}\n``` {.julia .cell-code}\nmtg2 = transform(\n    mtg,\n    [:Ra_PAR_f, :Ra_NIR_f] => ((x, y) -> x + y * 1.2) => :Rᵢ, # This would be the incident radiation\n    [:Ra_PAR_f, :Ra_NIR_f] => ((x, y) -> x + y) => :Rₛ,\n    :Ra_PAR_f => (x -> x * 4.57) => :aPPFD,\n    (x -> 0.3) => :d,\n    ignore_nothing=true\n)\n```\n\n::: {.cell-output .cell-output-display execution_count=10}\n```\n/ 1: Individual\n└─ / 2: Axis\n   ├─ < 5: Metamer\n   ├─ < 799: Metamer\n   │  ├─ + 800: Axis\n   │  │  ├─ < 806: Metamer\n   │  │  │  └─ + 807: Axis\n   │  │  │     ├─ / 808: Metamer\n   │  │  │     ├─ < 810: Metamer\n   │  │  │     ├─ < 814: Metamer\n   │  │  │     │  ├─ + 816: Leaf\n   │  │  │     │  └─ + 815: Leaf\n   │  │  │     ├─ < 811: Metamer\n   │  │  │     │  ├─ + 813: Leaf\n   │  │  │     │  └─ + 812: Leaf\n   │  │  │     ├─ < 809: Metamer\n   │  │  │     └─ < 817: Metamer\n   │  │  │        └─ + 818: Leaf\n   │  │  ├─ < 939: Metamer\n   │  │  │  ├─ + 940: Leaf\n   │  │  │  └─ + 941: Leaf\n   │  │  ├─ < 803: Metamer\n   │  │  ├─ < 926: Metamer\n   │  │  ├─ < 936: Metamer\n   │  │  │  ├─ + 938: Leaf\n   │  │  │  └─ + 937: Leaf\n   │  │  ├─ < 899: Metamer\n   │  │  ├─ < 842: Metamer\n   │  │  │  ├─ + 869: Axis\n   │  │  │  │  ├─ < 875: Metamer\n…\n```\n:::\n:::\n\n\n\n!!! note\n\tWe use `transform` instead of `transform!` here to make a copy of the mtg after modification because we shouldn't mutate objects in Pluto notebooks.\n\n\n\n## Running the simulation\n\n\n::: {.cell execution_count=10}\n``` {.julia .cell-code}\nbegin\n    mtg_sim = deepcopy(mtg2)\n    # Initialize the models inside the MTG:\n    init_mtg_models!(mtg_sim, models, length(weather), verbose=false)\n    # Make the simulation:\n    run!(mtg_sim, weather)\nend\n```\n:::\n\n\n\n## Benchmarking\n\nLet's make a benchmark of the simulation on the whole coffee tree.\n\n\n::: {.cell execution_count=11}\n``` {.julia .cell-code}\nbegin\n    mtg_sim_bench = deepcopy(mtg2)\n    # Initialize the models inside the MTG:\n    init_mtg_models!(mtg_sim_bench, models, length(weather), verbose=false)\n    # Make the simulation:\n    times = @benchmark run!($mtg_sim, $weather)\nend\n```\n\n::: {.cell-output .cell-output-display execution_count=12}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre>BenchmarkTools.Trial: 16 samples with 1 evaluation.\n Range <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-cyan-fg ansi-bold\">min</span> … <span class=\"ansi-magenta-fg\">max</span><span class=\"ansi-bright-black-fg\">):  </span><span class=\"ansi-cyan-fg ansi-bold\">294.873 ms</span> … <span class=\"ansi-magenta-fg\">351.567 ms</span>  <span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>min … max<span class=\"ansi-bright-black-fg\">): </span>2.61% … 4.54%\n Time  <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-blue-fg ansi-bold\">median</span><span class=\"ansi-bright-black-fg\">):     </span><span class=\"ansi-blue-fg ansi-bold\">313.512 ms               </span><span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>median<span class=\"ansi-bright-black-fg\">):    </span>4.80%\n Time  <span class=\"ansi-bright-black-fg\">(</span><span class=\"ansi-green-fg ansi-bold\">mean</span> ± <span class=\"ansi-green-fg\">σ</span><span class=\"ansi-bright-black-fg\">):   </span><span class=\"ansi-green-fg ansi-bold\">317.894 ms</span> ± <span class=\"ansi-green-fg\"> 16.451 ms</span>  <span class=\"ansi-bright-black-fg\">┊</span> GC <span class=\"ansi-bright-black-fg\">(</span>mean ± σ<span class=\"ansi-bright-black-fg\">):  </span>4.48% ± 0.79%\n  ▃                █<span class=\"ansi-blue-fg\"> </span>      <span class=\"ansi-green-fg\"> </span>                                     \n  █▁▁▁▁▁▇▁▁▇▁▁▁▁▇▁▁█<span class=\"ansi-blue-fg\">▁</span>▁▁▁▇▁▁<span class=\"ansi-green-fg\">▁</span>▁▇▁▁▇▁▁▁▁▁▇▁▁▁▁▁▇▁▁▇▇▁▁▁▁▁▁▁▁▁▁▁▁▁▇ ▁\n  295 ms<span class=\"ansi-bright-black-fg\">           Histogram: frequency by time</span>          352 ms <span class=\"ansi-bold\">&lt;</span>\n Memory estimate<span class=\"ansi-bright-black-fg\">: </span><span class=\"ansi-yellow-fg\">82.59 MiB</span>, allocs estimate<span class=\"ansi-bright-black-fg\">: </span><span class=\"ansi-yellow-fg\">1130880</span>.</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {.cell execution_count=12}\n``` {.julia .cell-code}\nnleaves = length(findall(traverse(mtg_sim_bench, node -> node.MTG.symbol == \"Leaf\")))\n```\n\n::: {.cell-output .cell-output-display execution_count=13}\n```\n2179\n```\n:::\n:::\n\n\n::: {.cell execution_count=13}\n``` {.julia .cell-code}\nn_meteo_steps = length(weather)\n```\n\n::: {.cell-output .cell-output-display execution_count=14}\n```\n3\n```\n:::\n:::\n\n\n::: {.cell execution_count=14}\n``` {.julia .cell-code}\ntotal_time_s = sum(times.times) / length(times.times) * 1e-9\n```\n\n::: {.cell-output .cell-output-display execution_count=15}\n```\n0.3178939979375\n```\n:::\n:::\n\n\n\nThe simulation takes **$(round((total_time_s * 1e6) / (nleaves * n_meteo_steps), digits = 1)) μs** to run for each leaf, and **$(round(total_time_s, digits = 2)) s** for the whole plant on all time-steps.\n\n\n\n!!! warning\n\tBenchmarking shouldn't be done in a Pluto notebook, and especially not on Github CI server that are **very** slow, but this gives an idea of how fast we can make a simulation, even on very low end hardware, and without parallelization.\n\n\n\n## Plotting the result in 3D\n\n\n::: {.cell execution_count=15}\n``` {.julia .cell-code}\nf = let\n    f = Figure()\n    ax = Axis3(f[1, 1], aspect=:data)\n    p = viz!(ax, mtg_sim, color=:Tₗ, index=1)\n    colorbar(f[1, 2], p)\n    f\nend\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nObservable((27.048340136571866, 38.613736428598415))\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=16}\n![](Fig7_PlantBiophysics_3D_coffee_tree_files/figure-html/cell-16-output-2.svg){}\n:::\n:::\n\n\n::: {.cell execution_count=16}\n``` {.julia .cell-code}\nsave(\"3d_coffee.png\", f);\n```\n:::\n\n\n\n",
    "supporting": [
      "Fig7_PlantBiophysics_3D_coffee_tree_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}